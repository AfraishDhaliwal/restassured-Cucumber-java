[
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 910698084,
              "status": "passed"
            },
            "match": {
              "location": "hook.setupReqire(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "reqire api test user1",
        "description": "",
        "id": "how-to-test-rest-apis-reqire;reqire-api-test-user1",
        "after": [
          {
            "result": {
              "duration": 770413,
              "status": "passed"
            },
            "match": {
              "location": "hook.closer(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1688457395,
              "status": "passed"
            },
            "line": 6,
            "name": "a user exist in the api with id 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 32
                }
              ],
              "location": "apiTest.a_user_exists_with_id(String)"
            },
            "keyword": "Given "
          },
          {
            "output": [
              "Expected Status Code: 200 Actual status code: 200"
            ],
            "result": {
              "duration": 5050213,
              "status": "passed"
            },
            "line": 7,
            "name": "the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 19
                }
              ],
              "location": "restApis.verify_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "output": [
              "Expected body content: id Actual body content: true",
              "Expected body content: 1 Actual body content: true",
              "Expected body content: first_name Actual body content: true",
              "Expected body content: George Actual body content: true"
            ],
            "result": {
              "duration": 3905349,
              "status": "passed"
            },
            "line": 8,
            "name": "response includes the following",
            "match": {
              "location": "restApis.response_equals(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "id",
                  "1"
                ],
                "line": 9
              },
              {
                "cells": [
                  "first_name",
                  "George"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 6419457,
              "status": "passed"
            },
            "match": {
              "location": "hook.setupReqire(Scenario)"
            }
          }
        ],
        "line": 12,
        "name": "reqire api test user2",
        "description": "",
        "id": "how-to-test-rest-apis-reqire;reqire-api-test-user2",
        "after": [
          {
            "result": {
              "duration": 58661,
              "status": "passed"
            },
            "match": {
              "location": "hook.closer(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 539025623,
              "status": "passed"
            },
            "line": 13,
            "name": "a user exist in the api with id 2",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 32
                }
              ],
              "location": "apiTest.a_user_exists_with_id(String)"
            },
            "keyword": "Given "
          },
          {
            "output": [
              "Expected Status Code: 200 Actual status code: 200"
            ],
            "result": {
              "duration": 229755,
              "status": "passed"
            },
            "line": 14,
            "name": "the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 19
                }
              ],
              "location": "restApis.verify_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "output": [
              "Expected body content: id Actual body content: true",
              "Expected body content: 2 Actual body content: true",
              "Expected body content: first_name Actual body content: true",
              "Expected body content: Janet Actual body content: true"
            ],
            "result": {
              "duration": 370053,
              "status": "passed"
            },
            "line": 15,
            "name": "response includes the following",
            "match": {
              "location": "restApis.response_equals(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "id",
                  "2"
                ],
                "line": 16
              },
              {
                "cells": [
                  "first_name",
                  "Janet"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3124181,
              "status": "passed"
            },
            "match": {
              "location": "hook.setupReqire(Scenario)"
            }
          }
        ],
        "line": 19,
        "name": "reqire api test to create new user",
        "description": "",
        "id": "how-to-test-rest-apis-reqire;reqire-api-test-to-create-new-user",
        "after": [
          {
            "result": {
              "duration": 39107,
              "status": "passed"
            },
            "match": {
              "location": "hook.closer(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 519318009,
              "status": "passed"
            },
            "line": 20,
            "name": "i create following user",
            "match": {
              "location": "apiTest.userCreation(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "\"name\"",
                  "\"sumanpreet\""
                ],
                "line": 21
              },
              {
                "cells": [
                  "\"job\"",
                  "\"Test Analyst\""
                ],
                "line": 22
              }
            ],
            "keyword": "Given "
          },
          {
            "output": [
              "Expected Status Code: 201 Actual status code: 201"
            ],
            "result": {
              "duration": 286950,
              "status": "passed"
            },
            "line": 23,
            "name": "the status code is 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 19
                }
              ],
              "location": "restApis.verify_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "output": [
              "Expected body content: name Actual body content: true",
              "Expected body content: sumanpreet Actual body content: true",
              "Expected body content: job Actual body content: true",
              "Expected body content: Test Analyst Actual body content: true"
            ],
            "result": {
              "duration": 400360,
              "status": "passed"
            },
            "line": 24,
            "name": "response includes the following",
            "match": {
              "location": "restApis.response_equals(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "sumanpreet"
                ],
                "line": 25
              },
              {
                "cells": [
                  "job",
                  "Test Analyst"
                ],
                "line": 26
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3252257,
              "status": "passed"
            },
            "match": {
              "location": "hook.setupReqire(Scenario)"
            }
          }
        ],
        "line": 28,
        "name": "delete user",
        "description": "",
        "id": "how-to-test-rest-apis-reqire;delete-user",
        "after": [
          {
            "result": {
              "duration": 50839,
              "status": "passed"
            },
            "match": {
              "location": "hook.closer(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 338135053,
              "status": "passed"
            },
            "line": 29,
            "name": "i delete a user with id 265",
            "match": {
              "arguments": [
                {
                  "val": "265",
                  "offset": 24
                }
              ],
              "location": "apiTest.deleteUser(String)"
            },
            "keyword": "Given "
          },
          {
            "output": [
              "Expected Status Code: 204 Actual status code: 204"
            ],
            "result": {
              "duration": 1384886,
              "status": "passed"
            },
            "line": 30,
            "name": "the status code is 204",
            "match": {
              "arguments": [
                {
                  "val": "204",
                  "offset": 19
                }
              ],
              "location": "restApis.verify_status_code(int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "How to test Rest Apis reqire",
    "description": "I want to use this template for my feature file to test Rest Apis",
    "id": "how-to-test-rest-apis-reqire",
    "keyword": "Feature",
    "uri": "apiTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@reqire"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3101695,
              "status": "passed"
            },
            "match": {
              "location": "hook.setupGoogle(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "User calls web service to get a book by its ISBN",
        "description": "",
        "id": "how-to-test-rest-apis;user-calls-web-service-to-get-a-book-by-its-isbn",
        "after": [
          {
            "result": {
              "duration": 61105,
              "status": "passed"
            },
            "match": {
              "location": "hook.closer(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 757859581,
              "status": "passed"
            },
            "line": 6,
            "name": "a book exists with an isbn of 9781451648546",
            "match": {
              "arguments": [
                {
                  "val": "9781451648546",
                  "offset": 30
                }
              ],
              "location": "restApis.a_book_exists_with_isbn(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1234323,
              "status": "passed"
            },
            "line": 7,
            "name": "a user retrieves the book by isbn",
            "match": {
              "location": "restApis.a_user_retrieves_the_book_by_isbn()"
            },
            "keyword": "When "
          },
          {
            "output": [
              "Expected Status Code: 200 Actual status code: 200"
            ],
            "result": {
              "duration": 289394,
              "status": "passed"
            },
            "line": 8,
            "name": "the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 19
                }
              ],
              "location": "restApis.verify_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "output": [
              "Expected body content: totalItems Actual body content: true",
              "Expected body content: 1 Actual body content: true",
              "Expected body content: kind Actual body content: true",
              "Expected body content: books#volumes Actual body content: true"
            ],
            "result": {
              "duration": 1028032,
              "status": "passed"
            },
            "line": 9,
            "name": "response includes the following",
            "match": {
              "location": "restApis.response_equals(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "totalItems",
                  "1"
                ],
                "line": 10
              },
              {
                "cells": [
                  "kind",
                  "books#volumes"
                ],
                "line": 11
              }
            ],
            "keyword": "And "
          },
          {
            "output": [
              "Expected body content: Steve Jobs Actual body content: true",
              "Expected body content: Simon and Schuster Actual body content: true",
              "Expected body content: 630 Actual body content: true"
            ],
            "result": {
              "duration": 4776952,
              "status": "passed"
            },
            "line": 12,
            "name": "response includes the following in any order",
            "match": {
              "location": "restApis.response_contains_in_any_order(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "items.volumeInfo.title",
                  "Steve Jobs"
                ],
                "line": 13
              },
              {
                "cells": [
                  "items.volumeInfo.publisher",
                  "Simon and Schuster"
                ],
                "line": 14
              },
              {
                "cells": [
                  "items.volumeInfo.pageCount",
                  "630"
                ],
                "line": 15
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2068774,
              "status": "passed"
            },
            "match": {
              "location": "hook.setupGoogle(Scenario)"
            }
          }
        ],
        "line": 17,
        "name": "User calls web service to get correct book by its ISBN",
        "description": "",
        "id": "how-to-test-rest-apis;user-calls-web-service-to-get-correct-book-by-its-isbn",
        "after": [
          {
            "result": {
              "duration": 67460,
              "status": "passed"
            },
            "match": {
              "location": "hook.closer(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 705736449,
              "status": "passed"
            },
            "line": 18,
            "name": "a book exists with an isbn of 9781451648546",
            "match": {
              "arguments": [
                {
                  "val": "9781451648546",
                  "offset": 30
                }
              ],
              "location": "restApis.a_book_exists_with_isbn(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 54750,
              "status": "passed"
            },
            "line": 19,
            "name": "a user retrieves the book by isbn",
            "match": {
              "location": "restApis.a_user_retrieves_the_book_by_isbn()"
            },
            "keyword": "When "
          },
          {
            "output": [
              "Expected Status Code: 200 Actual status code: 200"
            ],
            "result": {
              "duration": 204825,
              "status": "passed"
            },
            "line": 20,
            "name": "the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 19
                }
              ],
              "location": "restApis.verify_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "output": [
              "Expected body content: totalItems Actual body content: true",
              "Expected body content: 1 Actual body content: true",
              "Expected body content: kind Actual body content: true",
              "Expected body content: books#volumes Actual body content: true"
            ],
            "result": {
              "duration": 303082,
              "status": "passed"
            },
            "line": 21,
            "name": "response includes the following",
            "match": {
              "location": "restApis.response_equals(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "totalItems",
                  "1"
                ],
                "line": 22
              },
              {
                "cells": [
                  "kind",
                  "books#volumes"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "output": [
              "Expected body content: Steve Jobs Actual body content: true",
              "Expected body content: Simon and Schuster Actual body content: true",
              "Expected body content: 630 Actual body content: true"
            ],
            "result": {
              "duration": 346588,
              "status": "passed"
            },
            "line": 24,
            "name": "response includes the following in any order",
            "match": {
              "location": "restApis.response_contains_in_any_order(String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "items.volumeInfo.title",
                  "Steve Jobs"
                ],
                "line": 25
              },
              {
                "cells": [
                  "items.volumeInfo.publisher",
                  "Simon and Schuster"
                ],
                "line": 26
              },
              {
                "cells": [
                  "items.volumeInfo.pageCount",
                  "630"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "How to test Rest Apis",
    "description": "I want to use this template for my feature file to test Rest Apis",
    "id": "how-to-test-rest-apis",
    "keyword": "Feature",
    "uri": "restApis.feature",
    "tags": [
      {
        "line": 1,
        "name": "@googleAPI"
      }
    ]
  }
]